{"version":3,"sources":["fuchs.js"],"names":["Glasfaserfuchs","options","get_stichwort","stichwort","location","hash","decodeURIComponent","substr","start_fuchs","node","answer_text","d","utcOff","Date","getTimezoneOffset","fuchs","Elm","Main","init","flags","time","now","answers","images","glasfaserfuchs","loading","glafaavatar","strings","utcOffset","startOpen","window","href","indexOf","ports","updateStichwort","subscribe","history","pushState","addEventListener","stichwortChanged","send","setInterval","timeChanged","node_selector","document","querySelector","that","src_element","text","src_url","fetch","then","response","txt"],"mappings":";;;;;;;;;;;;;AAmGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAlGA,IAAA,EAAA,QAAA,kBAEA,EAAA,EAAA,QAAA,yBAEA,EAAA,EAAA,QAAA,uBAIA,EAAA,EAAA,QAAA,sBA0FA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtFe,SAASA,EAAeC,GAE/BC,IAAAA,EAAgB,WACZC,IAAAA,EAAYC,SAASC,KAIlBF,OAHHA,IACAA,EAAYG,mBAAmBH,EAAUI,OAAO,KAE7CJ,GAGPK,EAAc,SAASC,EAAMC,GACzBC,IACAC,GADI,IAAIC,MACGC,oBAGXC,EAAQC,EAAIC,IAAAA,KAAKC,KAAK,CACtBT,KAAMA,EACNU,MAAO,CACHC,KAAMP,KAAKQ,MACXlB,UAAWD,IACXoB,QAASZ,EACTa,OAAQ,CACKC,MAAAA,EADL,QAEOC,QAAAA,EAFP,QAGWC,YAAAA,EAAAA,SAGnBC,QAAS1B,EAAQ0B,SAAW,GAC5BC,UAAWhB,EACXiB,WAAwD,IAA7CC,OAAO1B,SAAS2B,KAAKC,QAAQ,OAAQ,MAyBjDjB,OArBPA,EAAMkB,MAAMC,gBAAgBC,UAAU,SAAUhC,GACxCiC,QAAQC,UACJlC,GAAaA,GAAaD,KAC1BkC,QAAQC,UAAU,KAAM,KAAM,QAAUlC,GAG5CC,SAASC,KAAOF,IAIxB2B,OAAOQ,iBAAiB,aAAc,WAClCvB,EAAMkB,MAAMM,iBAAiBC,KAAKtC,OAGnC,GAGHuC,YAAY,WACR1B,EAAMkB,MAAMS,YAAYF,KAAK3B,KAAKQ,QACnC,KAEIN,GAKPO,EAAU,GAEVqB,EAAgB1C,EAAQQ,MAAQ,kBAChCA,EAAOmC,SAASC,cAAcF,GAE9BlC,GAAS,cAATA,EACM,KAAA,4BAA8BR,EAAQQ,KAG5CqC,IAAAA,EAAO,KAEP7C,EAAQ8C,aACRzB,EAAUsB,SAASC,cAAc5C,EAAQ8C,aAAaC,KACtDF,EAAK/B,MAAQP,EAAYC,EAAMa,IACxBrB,EAAQgD,SACfC,MAAMjD,EAAQgD,SAASE,KAAK,SAAUC,GAC3BA,OAAAA,EAASJ,SACjBG,KAAK,SAASE,GACb/B,EAAU+B,EACVP,EAAK/B,MAAQP,EAAYC,EAAMa,KAhF3C,QAAA,eAwFAQ,OAAO9B,eAAiBA","file":"fuchs.js","sourceRoot":"..","sourcesContent":["\nimport { Elm } from './src/Main.elm'\n\nimport glasfaserfuchs from './glasfaserfuchs.png'\n\nimport loading from './loading-bars.svg'\n\n/* import wapp from './wapp.svg' */\n\nimport glafaavatar from './glafaavatar.png'\n\nimport './fuchs.css'\n\nexport default function Glasfaserfuchs(options) {\n\n    var get_stichwort = function () {\n        var stichwort = location.hash;\n        if (stichwort) {\n            stichwort = decodeURIComponent(stichwort.substr(1));\n        }\n        return stichwort;\n    }\n\n    var start_fuchs = function(node, answer_text) {\n        var d = new Date();\n        var utcOff = d.getTimezoneOffset();\n\n\n        var fuchs = Elm.Main.init({\n            node: node,\n            flags: {\n                time: Date.now(),\n                stichwort: get_stichwort(),\n                answers: answer_text,\n                images: {\n                    \"fuchs\": glasfaserfuchs,\n                    \"loading\": loading,\n                    \"glafaavatar\": glafaavatar\n                    /*            ,\"wapp\": wapp*/\n                },\n                strings: options.strings || {},\n                utcOffset: utcOff,\n                startOpen: window.location.href.indexOf(\"?gff\", 0) !== -1\n            }\n        });\n\n        fuchs.ports.updateStichwort.subscribe(function (stichwort) {\n            if (history.pushState) {\n                if (stichwort && stichwort != get_stichwort()) {\n                    history.pushState(null, null, '?gff#' + stichwort);\n                }\n            } else {\n                location.hash = stichwort;\n            }\n        });\n\n        window.addEventListener('hashchange', function () {\n            fuchs.ports.stichwortChanged.send(get_stichwort());\n            /* window.scrollTo(0, 0);*/\n\n        }, false);\n\n\n        setInterval(function () {\n            fuchs.ports.timeChanged.send(Date.now())\n        }, 1000);\n\n        return fuchs;\n    };\n\n\n\n    var answers = \"\";\n\n    var node_selector = options.node || '#glasfaserfuchs';\n    var node = document.querySelector(node_selector);\n\n    if (node === \"undefined\") {\n        throw \"Fuchsbau nicht gefunden: \" + options.node\n    }\n\n    var that = this;\n\n    if (options.src_element) {\n        answers = document.querySelector(options.src_element).text;\n        that.fuchs = start_fuchs(node, answers);\n    } else if (options.src_url) {\n        fetch(options.src_url).then(function (response) {\n            return response.text();\n        }).then(function(txt) {\n            answers = txt;\n            that.fuchs = start_fuchs(node, answers);\n        })\n    }\n\n\n}\n\n/* dirty... but parcel2 is not ready yet it appears */\nwindow.Glasfaserfuchs = Glasfaserfuchs\n"]}